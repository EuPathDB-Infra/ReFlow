#!/usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";

use ReFlow::Controller::WorkflowHandle;

usage() unless scalar(@ARGV) >= 7;

my $i = 0;
my $homeDir = $ARGV[$i++];
my $workflowId = $ARGV[$i++];
my $stepName = $ARGV[$i++];
my $stepId = $ARGV[$i++];
my $stepClassName = $ARGV[$i++];
my $errFile =  $ARGV[$i++];
my $mode = $ARGV[$i++];
my $undo = $ARGV[$i++];
my $forceUndoFileName = $ARGV[$i++];
my @paramStrings = @ARGV[$i..$#ARGV];

open (STDERR, ">>$errFile");
print STDERR "\n\n================== " . localtime() . " ====================\n";
print STDERR "step: $stepName\n";
print STDERR "running wrapper command: $0 " . join(" ", @ARGV) . "\n\n";

my $workflow = ReFlow::Controller::WorkflowHandle->new($homeDir);
# construct step subclass
my $workflowStep =  $workflow->getRunnableStep($stepClassName, $stepName, $stepId);
$workflowStep->setParamValues(\@paramStrings);
my $status = $workflowStep->runInWrapper($mode, $undo, $stepClassName, $forceUndoFileName);

exit($status);

sub usage {
    print "
Caution!! this program is only called by the workflow controller

usage: workflowRunStep workflow_dir workflow_id stepname stepid stepclass errfile [run|test] undo param1name=param1value ...
";
    exit(1);
}




