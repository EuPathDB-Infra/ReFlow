#!/usr/bin/perl

use strict;
use XML::Twig;
use lib "$ENV{GUS_HOME}/lib/perl";
use ReFlow::Dataset::Datasets;
use ReFlow::Dataset::Classes;
use ReFlow::Dataset::Template;

usage() unless scalar(@ARGV) == 1;

my ($datasetFile) = @ARGV;
my $datasetFileBasename = basename($datasetFile);

# parse datasets file
my $datasets = ReFlow::Datasets::Datasets::new($datasetFile);
my $classNamesUsed = $datasets->getClassNamesUsed();

# parse class file
my $classes = ReFlow::Datasets::Classes::new();

my $graphPlans2classes = $classes->getPlans2Classes();

# get list of plans used
my $planFilesUsed = $classes->getPlanFiles($classNamesUsed);


# process each plan
foreach my $planFileName (@$planFilesUsed) {
  my $planText = parseAndWritePlanFile($planFileName);
  my $templates = ReFlow::Datasets::Template::getTemplates($planFileName);
  foreach my $template (@$templates) {
    my $templateDatasets = $datasets->getDatasetsByClass($template->getClassName());
    foreach my $dataset (@$templateDatasets) {
      $template->addInstance($dataset);
    }
    $planText = $template->substituteInstancesIntoPlanText($planText);
  }
  my $planFileBasename = basename($planFileName);
  my $graphFile = "$ENV{GUS_HOME}/lib/xml/workflow/graphs/${datasetFileBasename}_$planFileBasename";
  open(GRAPH, ">$graphFile") || die "Can't open graph file '$graphFile' for writing\n";
  print GRAPH $planText;
}

sub usage {

  print "
Resolve a workflow master file.

Usage:  workflowResolveMaster master_xml_file lib_dir

Where:
  master_xml_file:  file with <templateInstance> elements
  lib_dir:          lib/ directory under which will be found the xml and rtc
                    files mentioned in the <templateInstance> elements

Output: the generated workflow xml file to STDOUT

";

  exit(1);
}
